automation:
  - alias: Control Fan Timer After Lights
    trigger:
      entity_id: light.bathroom
      platform: state
      to: 'off'
    action:
      - service: timer.start
        data:
          entity_id: timer.bathroom_fan 
          duration: 00:02:00
  - alias: Control Fan Automatically
    trigger:
      - platform: state
        entity_id: binary_sensor.bathroom_fan_demand
    action:
      - service_template: >
          {% if states('binary_sensor.bathroom_fan_demand') == 'on' %}
            switch.turn_on
          {% else %}
            switch.turn_off
          {% endif %}  
        entity_id: switch.bathroom_fan

binary_sensor:                          
  - platform: template                
    sensors:
      bathroom_fan_demand:
        value_template: >-
          {{
            (now().hour <= 23 and now().hour >= 6)
            and (
              (states('sensor.bathroom_humidity') | int > 60)
              or (states('timer.bathroom_fan') == 'active')
            )
          }}

script:
  start_bathroom_fan_timer:
    sequence:
      - service: timer.start
        data:
          entity_id: timer.bathroom_fan
          duration: 00:20:00

timer:
    bathroom_fan: ~
